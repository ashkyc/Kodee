{"ast":null,"code":"var _jsxFileName = \"C:\\\\Kodee\\\\frontend\\\\src\\\\components\\\\addressAutoComplete.jsx\";\nimport React from \"react\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { create } from \"../services/addressService\";\n\nclass AddressAutoComplete extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = address => {\n      this.setState({\n        address\n      });\n    };\n\n    this.handleSelect = address => {\n      this.setState({\n        address\n      });\n      geocodeByAddress(address).then(results => getLatLng(results[0])).then(latLng => this.setStatewithLatLng(latLng)).catch(error => console.error(\"latLng Error\", error));\n    };\n\n    this.handleClear = () => {\n      this.setState({\n        address: \"\",\n        lat: null,\n        lng: null\n      });\n    };\n\n    this.setStatewithLatLng = latLng => {\n      this.setState({\n        lat: latLng.lat,\n        lng: latLng.lng\n      });\n    };\n\n    this.handleBtnClick = () => {\n      create(this.state).then(this.handleSuccess).catch(this.handleError);\n    };\n\n    this.handleSuccess = data => {\n      console.log(data);\n    };\n\n    this.handleError = error => {\n      console.log(error);\n    };\n\n    this.state = {\n      address: \"\",\n      lat: null,\n      lng: null\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(PlacesAutocomplete, {\n      value: this.state.address,\n      onChange: this.handleChange,\n      onSelect: this.handleSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps,\n      loading\n    }) => React.createElement(\"div\", {\n      className: \"search-bar-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search-input-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({}, getInputProps({\n      placeholder: \"Search Places ...\",\n      className: \"search-input\"\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"clear-button\",\n      onClick: this.handleClear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"x\")), React.createElement(\"div\", {\n      className: \"autocomplete-dropdown-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Loading...\"), suggestions.map(suggestion => {\n      const className = suggestion.active ? \"suggestion-item--active\" : \"suggestion-item\";\n      const style = suggestion.active ? {\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n      } : {\n        backgroundColor: \"#ffffff\",\n        cursor: \"pointer\"\n      };\n      return React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n        className,\n        style\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, suggestion.description));\n    })))), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Get Result\")));\n  }\n\n}\n\nexport default AddressAutoComplete;","map":{"version":3,"sources":["C:\\Kodee\\frontend\\src\\components\\addressAutoComplete.jsx"],"names":["React","PlacesAutocomplete","geocodeByAddress","getLatLng","create","AddressAutoComplete","Component","constructor","props","handleChange","address","setState","handleSelect","then","results","latLng","setStatewithLatLng","catch","error","console","handleClear","lat","lng","handleBtnClick","state","handleSuccess","handleError","data","log","render","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng\r\n} from \"react-places-autocomplete\";\r\nimport { create } from \"../services/addressService\";\r\n\r\nclass AddressAutoComplete extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      address: \"\",\r\n      lat: null,\r\n      lng: null\r\n    };\r\n  }\r\n\r\n  handleChange = address => {\r\n    this.setState({ address });\r\n  };\r\n\r\n  handleSelect = address => {\r\n    this.setState({ address });\r\n    geocodeByAddress(address)\r\n      .then(results => getLatLng(results[0]))\r\n      .then(latLng => this.setStatewithLatLng(latLng))\r\n      .catch(error => console.error(\"latLng Error\", error));\r\n  };\r\n\r\n  handleClear = () => {\r\n    this.setState({\r\n      address: \"\",\r\n      lat: null,\r\n      lng: null\r\n    });\r\n  };\r\n\r\n  setStatewithLatLng = latLng => {\r\n    this.setState({\r\n      lat: latLng.lat,\r\n      lng: latLng.lng\r\n    });\r\n  };\r\n\r\n  handleBtnClick = () => {\r\n    create(this.state)\r\n      .then(this.handleSuccess)\r\n      .catch(this.handleError);\r\n  };\r\n\r\n  handleSuccess = data => {\r\n    console.log(data);\r\n  };\r\n\r\n  handleError = error => {\r\n    console.log(error);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <PlacesAutocomplete\r\n          value={this.state.address}\r\n          onChange={this.handleChange}\r\n          onSelect={this.handleSelect}\r\n        >\r\n          {({\r\n            getInputProps,\r\n            suggestions,\r\n            getSuggestionItemProps,\r\n            loading\r\n          }) => (\r\n            <div className=\"search-bar-container\">\r\n              <div className=\"search-input-container\">\r\n                <input\r\n                  {...getInputProps({\r\n                    placeholder: \"Search Places ...\",\r\n                    className: \"search-input\"\r\n                  })}\r\n                />\r\n                <button className=\"clear-button\" onClick={this.handleClear}>\r\n                  x\r\n                </button>\r\n              </div>\r\n              <div className=\"autocomplete-dropdown-container\">\r\n                {loading && <div>Loading...</div>}\r\n                {suggestions.map(suggestion => {\r\n                  const className = suggestion.active\r\n                    ? \"suggestion-item--active\"\r\n                    : \"suggestion-item\";\r\n                  const style = suggestion.active\r\n                    ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\r\n                    : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\r\n                  return (\r\n                    <div\r\n                      {...getSuggestionItemProps(suggestion, {\r\n                        className,\r\n                        style\r\n                      })}\r\n                    >\r\n                      <span>{suggestion.description}</span>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </PlacesAutocomplete>\r\n        <div className=\"text-center\">\r\n          <button className=\"btn btn-danger\">Get Result</button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddressAutoComplete;\r\n"]},"metadata":{},"sourceType":"module"}