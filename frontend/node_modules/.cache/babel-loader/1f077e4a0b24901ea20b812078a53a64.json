{"ast":null,"code":"import axios from \"axios\";\naxios.defaults.withCredentials = true; // Add a request interceptor\n\naxios.interceptors.request.use(function (config) {\n  config.withCredentials = true;\n  return config;\n});\n/**\r\n * Will unpack the response body from reponse object\r\n * @param {*} response\r\n *\r\n */\n\nconst onGlobalSuccess = response => {\n  /// Should not use if you need access to anything other than the data\n  return response.data;\n};\n\nconst onGlobalError = err => {\n  return Promise.reject(err);\n};\n\nconst API_HOST_PREFIX = process.env.REACT_APP_API_HOST_PREFIX;\nconst API_NODE_HOST_PREFIX = process.env.REACT_APP_NODE_API_HOST_PREFIX;\nconsole.log(\"API_HOST_PREFIX\", API_HOST_PREFIX);\nexport { onGlobalError, onGlobalSuccess, API_HOST_PREFIX, API_NODE_HOST_PREFIX };","map":{"version":3,"sources":["C:\\Kodee\\frontend\\src\\services\\serviceHelper.js"],"names":["axios","defaults","withCredentials","interceptors","request","use","config","onGlobalSuccess","response","data","onGlobalError","err","Promise","reject","API_HOST_PREFIX","process","env","REACT_APP_API_HOST_PREFIX","API_NODE_HOST_PREFIX","REACT_APP_NODE_API_HOST_PREFIX","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACAA,KAAK,CAACC,QAAN,CAAeC,eAAf,GAAiC,IAAjC,C,CACA;;AACAF,KAAK,CAACG,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,UAASC,MAAT,EAAiB;AAC9CA,EAAAA,MAAM,CAACJ,eAAP,GAAyB,IAAzB;AACA,SAAOI,MAAP;AACD,CAHD;AAKA;;;;;;AAKA,MAAMC,eAAe,GAAGC,QAAQ,IAAI;AAClC;AACA,SAAOA,QAAQ,CAACC,IAAhB;AACD,CAHD;;AAKA,MAAMC,aAAa,GAAGC,GAAG,IAAI;AAC3B,SAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACD,CAFD;;AAIA,MAAMG,eAAe,GAAGC,OAAO,CAACC,GAAR,CAAYC,yBAApC;AACA,MAAMC,oBAAoB,GAAGH,OAAO,CAACC,GAAR,CAAYG,8BAAzC;AAEAC,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BP,eAA/B;AAEA,SACEJ,aADF,EAEEH,eAFF,EAGEO,eAHF,EAIEI,oBAJF","sourcesContent":["import axios from \"axios\";\r\naxios.defaults.withCredentials = true;\r\n// Add a request interceptor\r\naxios.interceptors.request.use(function(config) {\r\n  config.withCredentials = true;\r\n  return config;\r\n});\r\n\r\n/**\r\n * Will unpack the response body from reponse object\r\n * @param {*} response\r\n *\r\n */\r\nconst onGlobalSuccess = response => {\r\n  /// Should not use if you need access to anything other than the data\r\n  return response.data;\r\n};\r\n\r\nconst onGlobalError = err => {\r\n  return Promise.reject(err);\r\n};\r\n\r\nconst API_HOST_PREFIX = process.env.REACT_APP_API_HOST_PREFIX;\r\nconst API_NODE_HOST_PREFIX = process.env.REACT_APP_NODE_API_HOST_PREFIX;\r\n\r\nconsole.log(\"API_HOST_PREFIX\", API_HOST_PREFIX);\r\n\r\nexport {\r\n  onGlobalError,\r\n  onGlobalSuccess,\r\n  API_HOST_PREFIX,\r\n  API_NODE_HOST_PREFIX\r\n};\r\n"]},"metadata":{},"sourceType":"module"}